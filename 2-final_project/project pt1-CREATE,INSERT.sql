-- MySQL Script generated by MySQL Workbench
-- Tue Jul 13 15:29:52 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema kaggle_website_project
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema kaggle_website_project
-- -----------------------------------------------------

-- CRUD OPERATION 1: CREATING SCHEMA AND THE 12 TABLES
-- ---------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `kaggle_website_project` DEFAULT CHARACTER SET utf8 ;
USE `kaggle_website_project` ;

-- -----------------------------------------------------
-- Table `kaggle_website_project`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`user` (
  `user_id` INT NOT NULL,
  `user_full_name` VARCHAR(250) NOT NULL,
  `email_address` VARCHAR(90) NOT NULL,
  `user_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`course` (
  `course_id` INT NOT NULL,
  `course_name` VARCHAR(150) NOT NULL,
  `course_length_hrs` INT NOT NULL,
  PRIMARY KEY (`course_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`dataset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`dataset` (
  `dataset_id` INT NOT NULL,
  `dataset_title` VARCHAR(150) NOT NULL,
  `dataset_category` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`dataset_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`code_notebook`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`code_notebook` (
  `notebook_id` INT NOT NULL,
  `notebook_name` VARCHAR(150) NOT NULL,
  `notebook_category` VARCHAR(150) NOT NULL,
  `dataset_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`notebook_id`),
  INDEX `fk_code_notebooks_datasets1_idx` (`dataset_id` ASC) VISIBLE,
  INDEX `fk_code_notebooks_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_code_notebooks_datasets1`
    FOREIGN KEY (`dataset_id`)
    REFERENCES `kaggle_website_project`.`dataset` (`dataset_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_code_notebooks_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `kaggle_website_project`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`discussion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`discussion` (
  `discussion_id` INT NOT NULL,
  `comment_count` INT NOT NULL,
  `discussion_name` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`discussion_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`competition`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`competition` (
  `competition_id` INT NOT NULL,
  `competition_name` VARCHAR(150) NOT NULL,
  `price` INT NOT NULL,
  `date` DATE NOT NULL,
  PRIMARY KEY (`competition_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`user_ranking`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`user_ranking` (
  `rank_code` INT NOT NULL,
  `position` INT NOT NULL,
  `medal_count` INT NOT NULL,
  `rank_title` VARCHAR(45) NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`rank_code`),
  INDEX `fk_user_ranking_user_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_ranking_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `kaggle_website_project`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`course_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`course_has_user` (
  `course_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`course_id`, `user_id`),
  INDEX `fk_course_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_course_has_user_course1_idx` (`course_id` ASC) VISIBLE,
  CONSTRAINT `fk_course_has_user_course1`
    FOREIGN KEY (`course_id`)
    REFERENCES `kaggle_website_project`.`course` (`course_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_course_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `kaggle_website_project`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`discussion_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`discussion_has_user` (
  `discussion_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`discussion_id`, `user_id`),
  INDEX `fk_discussions_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_discussions_has_user_discussions1_idx` (`discussion_id` ASC) VISIBLE,
  CONSTRAINT `fk_discussions_has_user_discussions1`
    FOREIGN KEY (`discussion_id`)
    REFERENCES `kaggle_website_project`.`discussion` (`discussion_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_discussions_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `kaggle_website_project`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`competition_has_user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`competition_has_user` (
  `competition_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  PRIMARY KEY (`competition_id`, `user_id`),
  INDEX `fk_competitions_has_user_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_competitions_has_user_competitions1_idx` (`competition_id` ASC) VISIBLE,
  CONSTRAINT `fk_competitions_has_user_competitions1`
    FOREIGN KEY (`competition_id`)
    REFERENCES `kaggle_website_project`.`competition` (`competition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_competitions_has_user_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `kaggle_website_project`.`user` (`user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`competition_has_dataset`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`competition_has_dataset` (
  `competition_id` INT NOT NULL,
  `dataset_id` INT NOT NULL,
  PRIMARY KEY (`competition_id`, `dataset_id`),
  INDEX `fk_competitions_has_datasets_datasets1_idx` (`dataset_id` ASC) VISIBLE,
  INDEX `fk_competitions_has_datasets_competitions1_idx` (`competition_id` ASC) VISIBLE,
  CONSTRAINT `fk_competitions_has_datasets_competitions1`
    FOREIGN KEY (`competition_id`)
    REFERENCES `kaggle_website_project`.`competition` (`competition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_competitions_has_datasets_datasets1`
    FOREIGN KEY (`dataset_id`)
    REFERENCES `kaggle_website_project`.`dataset` (`dataset_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `kaggle_website_project`.`tags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `kaggle_website_project`.`tags` (
  `tag_id` INT NOT NULL,
  `tag_name` VARCHAR(150) NOT NULL,
  `notebook_id` INT NOT NULL,
  `competition_id` INT NOT NULL,
  PRIMARY KEY (`tag_id`, `notebook_id`, `competition_id`),
  INDEX `fk_tags_code_notebook1_idx` (`notebook_id` ASC) VISIBLE,
  INDEX `fk_tags_competition1_idx` (`competition_id` ASC) VISIBLE,
  CONSTRAINT `fk_tags_code_notebook1`
    FOREIGN KEY (`notebook_id`)
    REFERENCES `kaggle_website_project`.`code_notebook` (`notebook_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_tags_competition1`
    FOREIGN KEY (`competition_id`)
    REFERENCES `kaggle_website_project`.`competition` (`competition_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- Adding indexes on tables
-- ------------------------
AlTER TABLE user
ADD INDEX idx_usern (user_name);
-- -----------------------------
AlTER TABLE course
ADD INDEX idx_coursen (course_name);
-- ---------------------------------
AlTER TABLE code_notebook
ADD INDEX idx_category (notebook_category);
-- ----------------------------------------
AlTER TABLE discussion
ADD INDEX idx_discuss (discussion_name);
-- -------------------------------------
AlTER TABLE dataset
ADD INDEX idx_data (dataset_category);
-- -----------------------------------
AlTER TABLE competition
ADD INDEX idx_dates (date);
-- -----------------------
AlTER TABLE user_ranking
ADD INDEX idx_leads (user_id);
-- ---------------------------
AlTER TABLE tags
ADD INDEX idx_harsh_tag (tag_name);
-- --------------------------------


-- CRUD OPERATION 2: UPDATING/POPULATING THE TABLES WITH DATA
-- ----------------------------------------------------------

-- INSERT DATA INTO user TABLE
-- ---------------------------
INSERT INTO user VALUES
(1,'Panashe Rusakaniko','panasherussy10@gmail.com','prusakaniko'),
(2,'Julia Andrews','juliezh@gmail.com','julie26'),
(3,'Sam Gardener','samz4@gmail.com','antactica2021'),
(4,'Barry Allen','ballen@gmail.com','theflash'),
(5,'Oliver Queen','themayor@gmail.com','arrow'),
(6,'Kara Zorel','girlofsteel@gmail.com','supergirl'),
(7,'Bruce Wayne','wayneindustries@gmail.com','batman'),
(8,'Sheldon Cooper','professorsheldon@gmail.com','youngsheldon'),
(9,'Jefferson Pieterson','freeland@gmail.com','black lightning'),
(10,'Mason Parker','rayparker@gmail.com','insta kid'),
(11,'Uthred Ragnarson','lastkingdom@gmail.com','uthredsonofuthred'),
(12,'Ragnar Lothbrok','norwergian@gmail.com','kingragnar'),
(13,'Sarah Peters','peterss@gmail.com','catgrant'),
(14,'Julia Robenson','julson@gmail.com','hulio'),
(15,'Zuck Bruce','zucksce@gmail.com','brucewayne'),
(16,'Tyler Luther','tylerjames@gmail.com','letitshine'),
(17,'Mary Milson','mwilson@byui.edu','rel250'),
(18,'John Stone','johnstone@gmail.com','jonso'),
(19,'Vuyan Dopps','vuxbharkim@gmail.com','vuxdame'),
(20,'Kayden Angels','kaykay@gmail.com','kaylo');

-- INSERT DATA INTO course TABLE
-- -----------------------------
INSERT INTO course VALUES
(100,'Introduction to Machine Learning',3),
(101,'Python',5),
(102,'Introduction to SQL',3),
(103,'Advanced SQL',4),
(104,'Introduction to Deep Learning',4),
(105,'Natural Language Processing',6),
(106,'Pandas',3),
(107,'Data Visualization',4),
(108,'Data Cleansing',4),
(109,'Feature Engineering',5);

-- INSERT DATA INTO dataset TABLE
-- ------------------------------
INSERT INTO dataset VALUES
(001,'NNS in R','Trading'),
(002,'Stock Exchange','Economics'),
(003,'Economy of Indian States','Economics'),
(004,'Reliance-NSE Stock data','Economics'),
(005,'Amazon Reviews','NLP'),
(006,'Reviews of Universal Studio','NLP'),
(007,'Survival patterns of cancer','Cancer'),
(008,'Covid-19 Research Papers','Covid');

-- INSERT DATA INTO code_notebook TABLE
-- ------------------------------------
INSERT INTO code_notebook VALUES
(225,'NLP-READ-EDA','Spacy','006',7),
(226,'Credit Card Fraud Transaction Investigation','Finance',003,12),
(227,'Simple_house_price_prediction','Trending',004,1),
(228,'Deep Evidental Research','Spacy',007,4),
(229,'Data Analysis of hotel booking Demand','Trending',002,13),
(230,'Disaster Tweets','Spacy',008,14);

-- INSERT DATA INTO discussion TABLE
-- ---------------------------------
INSERT INTO discussion VALUES
(01020,99,'Is positioning popular in Japan'),
(01021,145,'How much effort does it take to up a vote'),
(01022,12,'Thoughts about Feature Engineering'),
(01023,42,'Feature Engineering ideas'),
(01024,71,'Statistics Checkpoint for Data Science Interview'),
(01025,11,'Cheat Sheet in Python,R and SQL'),
(01026,16,'In general, what does A/B testing do?'),
(01027,54,'How to chose the best algorithmn for a model'),
(01028,40,'The road to LB=0.464'),
(01029,15,'More than 250 public datasets'),
(01030,41,'Companies and Datascience Interviews'),
(01031,7,'A quick note on metric use'),
(01032,110,'What is data science');

-- INSERT DATA INTO competition TABLE
INSERT INTO competition VALUES
(0001,'Titanic-Machine Learning-Disaster',200000,'2021-05-16'),
(0002,'House Prizes-Advanced Regression Techniques',0,'2019-09-02'),
(0003,'SIIM-FISA BID-RSNA COVID-19 Detection',100000,'2021-07-21'),
(0004,'Jane Street Market Prediction',100000,'2020-11-04'),
(0005,'SETI Breakthrough Listen- ET Signal Search',15000,'2021-01-01'),
(0006,'CommonList Readability',60000,'2021-07-14'),
(0007,'Review Computational Analysis',20000,'2021-12-31');

-- INSERT DATA INTO user_ranking TABLE
-- -----------------------------------
INSERT INTO user_ranking VALUES
(6665,1,96,'Grand Master',7),
(3877,2,89,'Grand Master',1),
(9311,3,79,'Grand Master',13),
(9071,4,77,'Master',14),
(8782,5,76,'Master',2),
(6926,6,74,'Master',9),
(2886,7,66,'Expert',12),
(7409,8,60,'Expert',18),
(2174,9,58,'Expert',11),
(5609,10,47,'Expert',3),
(8632,11,44,'Novice',8),
(4419,12,43,'Novice',10),
(4058,13,37,'Novice',19),
(6571,14,35,'Novice',17),
(9753,14,35,'Novice',4),
(8022,16,27,'Novice',6),
(8020,17,24,'Novice',5),
(1024,18,16,'Novice',15),
(2126,19,12,'Novice',20),
(4962,20,0,'Novice',16);

-- INSERT DATA INTO tags TABLE
-- ---------------------------
INSERT INTO tags VALUES
(1,'Programming',228,0007),
(2,'Pandas',229,0002),
(3,'Arts and Entertainment',225,0006),
(10,'Arts and Entertainment',229,0005),
(4,'Beginner',227,0004),
(5,'Seaborn',226,0001),
(6,'Data Visualization',230,0003),
(7,'Education',229,0001),
(8,'Software',226,0007),
(9,'Health',230,0003),
(11,'Health',230,0004);

-- INSERT DATA INTO course_has_user TABLE
-- --------------------------------------
INSERT INTO course_has_user VALUES
(104,13),
(100,18),
(104,1),
(104,9),
(109,12),
(109,2),
(109,14),
(106,10),
(107,4),
(103,5);

-- INSERT DATA INTO competition_has_dataset TABLE
-- ---------------------------------------------
INSERT INTO competition_has_dataset VALUES
(0003,008),
(0004,004),
(0006,005),
(0007,001);

-- INSERT DATA INTO discussion_has_user TABLE
-- -----------------------------------------
INSERT INTO discussion_has_user VALUES
(01023,12),
(01023,2),
(01023,14),
(01022,1),
(01025,4),
(01027,9),
(01026,18),
(01032,7),
(01032,16),
(01028,20);

-- INSERT INTO competition_has_user TABLE
-- --------------------------------------
INSERT INTO competition_has_user VALUES
(0004,1),
(0004,13),
(0003,13),
(0007,1),
(0006,7),
(0001,2),
(0001,20),
(0001,19),
(0002,15),
(0003,5),
(0005,3),
(0005,8),
(0002,9),
(0006,4),
(0007,6),
(0007,10),
(0002,11),
(0004,12),
(0002,13),
(0001,14);